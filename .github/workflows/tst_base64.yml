# ========================================
# Base64認証テスト ワークフロー
# ========================================
# 概要: Google SheetsのサービスアカウントをBase64形式で使った認証をテストする
#       GitHub Secretsに保存されたBase64エンコードされたJSONファイルを
#       デコードして認証できることを確認
#       手動実行、PR作成時、コードプッシュ時に自動実行される
# ========================================

name: Base64認証テスト  # GitHub Actionsのワークフロー名

on:  # このワークフローが実行されるタイミングの定義
  # 手動実行を許可
  workflow_dispatch:  # GitHub Actions画面から手動で実行可能

  # PRとpush時に実行
  pull_request:  # プルリクエスト作成・更新時に実行
    branches: [main, master]  # main/masterブランチへのPRのみ対象
  push:  # コードプッシュ時に実行
    branches: [main, master]  # main/masterブランチへのプッシュのみ対象

jobs:  # 実行するジョブの定義
  test-base64:  # ジョブID
    runs-on: ubuntu-latest  # Ubuntu最新版の仮想環境で実行
    name: Google Sheets Base64認証テスト  # ジョブの表示名

    steps:  # ジョブ内で実行するステップの定義
    - name: コードをチェックアウト  # ステップ1: リポジトリのコードを取得
      uses: actions/checkout@v4  # GitHub公式のチェックアウトアクションv4を使用

    - name: Pythonセットアップ  # ステップ2: Python環境の準備
      uses: actions/setup-python@v5  # Python公式のセットアップアクションv5を使用
      with:  # アクションのパラメータ設定
        python-version: '3.11'  # Python 3.11を使用
        cache: 'pip'  # pipの依存関係をキャッシュして高速化

    - name: 依存関係インストール  # ステップ3: 必要なPythonパッケージをインストール
      run: |  # シェルコマンドを実行
        python -m pip install --upgrade pip  # pipを最新版にアップグレード
        pip install gspread google-auth python-dotenv  # Google Sheets接続用ライブラリをインストール

    - name: 環境変数チェック  # ステップ4: 必要な環境変数が設定されているか確認
      run: |  # シェルコマンドを実行
        echo "🔍 環境変数チェック"  # チェック開始メッセージ
        if [ -n "${{ secrets.TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64 }}" ]; then  # Base64認証情報が存在するか確認
          echo "  ✅ TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64: 設定済み"  # 設定済みメッセージ
        else  # 存在しない場合
          echo "  ❌ TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64: 未設定"  # 未設定メッセージ
        fi  # if文終了

    - name: Base64認証テスト実行  # ステップ5: 実際の認証テストを実行
      env:  # 環境変数の設定
        TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64: ${{ secrets.TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64 }}  # Base64エンコードされた認証情報
        GITHUB_ACTIONS: 'true'  # GitHub Actions環境であることを示すフラグ
      run: |  # シェルコマンドを実行
        echo "🔐 Base64認証テストを実行（テスト環境）"  # 実行開始メッセージ
        python tst/test_base64_auth.py --env 1  # テストスクリプトを実行（環境1=テスト環境）

    - name: テスト成功時の処理  # ステップ6: テスト成功時のメッセージ表示
      if: success()  # 前のステップが成功した場合のみ実行
      run: |  # シェルコマンドを実行
        echo "✅ Base64認証テスト成功"  # 成功メッセージ
        echo "Google SheetsへのBase64認証が正常に動作しています"  # 詳細説明

    - name: テスト失敗時の処理  # ステップ7: テスト失敗時のトラブルシューティング
      if: failure()  # 前のステップが失敗した場合のみ実行
      run: |  # シェルコマンドを実行
        echo "❌ Base64認証テスト失敗"  # 失敗メッセージ
        echo "GitHub Secretsの設定を確認してください:"  # 対処法のヘッダー
        echo "  - TST_GOOGLE_SERVICE_ACCOUNT_JSON_BASE64"  # 確認すべき設定名
        echo ""  # 空行
        echo "Base64エンコード方法:"  # エンコード方法のヘッダー
        echo "  Linux/Mac: base64 -i service_account.json"  # Linux/Mac用コマンド
        echo "  Windows: [System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes('service_account.json'))"  # Windows用コマンド
        exit 1  # エラーコード1で終了（失敗を明示）