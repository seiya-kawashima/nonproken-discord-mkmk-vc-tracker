name: CI/CD Feedback Loop

on:
  workflow_run:
    workflows: ["Python Tests with Coverage"]
    types:
      - completed
    branches:
      - 'feature/**'

jobs:
  feedback:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_branch }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install GitHub CLI
      run: |
        type gh || (
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh
        )
    
    - name: Analyze Failed Tests
      id: analyze
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Analyzing failed workflow run: ${{ github.event.workflow_run.id }}"
        
        # Get failed test logs
        gh run view ${{ github.event.workflow_run.id }} --log-failed > failed_tests.log
        
        # Check for specific error patterns
        if grep -q "TypeError: 'VCTrackerLogger' object is not callable" failed_tests.log; then
          echo "error_type=vctracker_not_callable" >> $GITHUB_OUTPUT
          echo "fix_available=true" >> $GITHUB_OUTPUT
        else
          echo "error_type=unknown" >> $GITHUB_OUTPUT
          echo "fix_available=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Apply Automatic Fix
      if: steps.analyze.outputs.fix_available == 'true'
      run: |
        if [ "${{ steps.analyze.outputs.error_type }}" == "vctracker_not_callable" ]; then
          echo "Applying fix for VCTrackerLogger not callable error"
          
          # Fix the test file
          sed -i 's/from logger import logger/from logger import VCTrackerLogger/' tests/test_logger.py
          sed -i 's/test_logger = logger(/test_logger = VCTrackerLogger(/' tests/test_logger.py
          
          echo "Fix applied successfully"
        fi
    
    - name: Run Local Tests
      continue-on-error: true
      run: |
        pip install pytest pytest-cov
        pytest tests/ --tb=short
    
    - name: Commit and Push Fix
      if: steps.analyze.outputs.fix_available == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "CI/CD Bot"
        git config --global user.email "cicd@bot.local"
        
        git add -A
        git diff --staged --quiet || (
          git commit -m "fix: CI/CDフィードバックによる自動修正
          
          - VCTrackerLoggerクラスを直接使用するように修正
          - TypeErrorを解決
          
          自動修正 by CI/CD Feedback Loop"
          
          git push
        )
    
    - name: Create Issue if Fix Not Available
      if: steps.analyze.outputs.fix_available == 'false'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue create \
          --title "CI/CD: 自動修正できないテスト失敗" \
          --body "ワークフロー実行 #${{ github.event.workflow_run.id }} でテストが失敗しましたが、自動修正できませんでした。
          
          詳細: https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}
          
          手動での修正が必要です。" \
          --label "ci-cd-feedback,bug"