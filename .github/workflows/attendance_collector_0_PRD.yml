name: 出席記録収集（本番環境）

on:
  schedule:
    # JST 4:00 (UTC 19:00 前日) から JST 6:55 (UTC 21:55 前日) まで5分ごとに実行
    # cron式: 分 時 日 月 曜日（0:日曜、1:月曜...6:土曜）
    - cron: '*/5 19-21 * * *'   # JST 4:00-6:55（毎日実行、Python側で日曜判定）、5分間隔
  workflow_dispatch:  # 手動実行も可能

jobs:
  check-and-run:
    name: 出席記録収集
    runs-on: ubuntu-latest

    steps:
    - name: コードをチェックアウト
      uses: actions/checkout@v4

    - name: Pythonセットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 依存パッケージのインストール
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 曜日チェック（日曜日のみスキップ）
      id: weekday_check
      run: |
        python << 'EOF'
        import sys
        from datetime import datetime
        import pytz
        import os

        # JSTで現在の日付を取得
        jst = pytz.timezone('Asia/Tokyo')
        today = datetime.now(jst)
        weekday_names = ['月', '火', '水', '木', '金', '土', '日']

        # 日曜日かどうかをチェック（日曜日のみスキップ）
        is_sunday = today.weekday() == 6  # 6:日曜

        print(f"JST現在時刻: {today.strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"今日は{weekday_names[today.weekday()]}曜日です")

        if is_sunday:
            print("日曜日のため処理をスキップします")
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                f.write("skip=true\n")
        else:
            print("出席記録収集を実行します")
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                f.write("skip=false\n")
        EOF

    - name: Discord VC出席記録収集（本番環境）
      if: steps.weekday_check.outputs.skip != 'true'
      env:
        DISCORD_BOT_TOKEN_0_PRD: ${{ secrets.DISCORD_BOT_TOKEN_0_PRD }}
        GOOGLE_SERVICE_ACCOUNT_JSON_BASE64_0_PRD: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_BASE64_0_PRD }}
        GOOGLE_SHARED_DRIVE_ID_0_PRD: ${{ secrets.GOOGLE_SHARED_DRIVE_ID_0_PRD }}
        DISCORD_VOICE_CHANNEL_IDS_0_PRD: ${{ secrets.DISCORD_VOICE_CHANNEL_IDS_0_PRD }}
      run: |
        echo "本番環境で出席記録を収集します"
        python discord_attendance_collector.py --env 0

    - name: 実行結果の通知（成功）
      if: success() && steps.weekday_check.outputs.skip != 'true'
      run: |
        echo "✅ 出席記録の収集が正常に完了しました（本番環境）"

    - name: 実行結果の通知（失敗）
      if: failure()
      run: |
        echo "❌ 出席記録の収集中にエラーが発生しました（本番環境）"
        echo "エラーログを確認してください"

    - name: 日曜日によるスキップ通知
      if: steps.weekday_check.outputs.skip == 'true'
      run: |
        echo "📅 本日は日曜日のため、出席記録収集をスキップしました"