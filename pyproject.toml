[tool.pytest.ini_options]
minversion = "7.4.0"  # pytest最小バージョン
addopts = [
    "-ra",  # 全テスト結果のサマリを表示
    "-v",  # 詳細な出力
    "--strict-markers",  # 未定義マーカーでエラー
    "--cov=src",  # srcディレクトリのカバレッジ測定
    "--cov=discord_attendance_collector.py",  # メインスクリプトもカバレッジ測定
    "--cov-report=term-missing",  # ターミナルに未カバー行を表示
    "--cov-report=html:htmlcov",  # HTMLレポート生成
    "--cov-report=xml",  # XMLレポート生成（CI用）
    "--cov-report=json",  # JSONレポート生成（詳細分析用）
    "--cov-branch",  # ブランチカバレッジも測定
]
testpaths = [
    "tst",  # メインのテストディレクトリ
    "tests",  # 追加のテストディレクトリ
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: 実行時間の長いテスト",
    "integration: 統合テスト",
    "unit: 単体テスト",
]

[tool.coverage.run]
source = ["src", "."]  # srcディレクトリとルートディレクトリを測定
branch = true  # ブランチカバレッジも測定
omit = [
    "*/tests/*",  # テストコードは除外
    "*/test_*.py",  # テストファイルは除外
    "*/__pycache__/*",  # キャッシュは除外
    "*/venv/*",  # 仮想環境は除外
    "*/.venv/*",  # 仮想環境は除外
    "*/env/*",  # 仮想環境は除外
    "*/site-packages/*",  # インストール済みパッケージは除外
    "setup.py",  # セットアップファイルは除外
    "htmlcov/*",  # カバレッジレポートは除外
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",  # __str__メソッドも除外
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pass",  # passステートメントは除外
]
precision = 2  # パーセンテージの小数点以下桁数
show_missing = true  # カバーされていない行番号を表示
skip_covered = false  # 100%カバーされたファイルも表示
skip_empty = true  # 空のファイルはスキップ
sort = "cover"  # カバレッジ率でソート
fail_under = 70  # 全体のカバレッジが70%未満ならエラー

[tool.coverage.html]
directory = "htmlcov"  # HTMLレポートの出力先
show_contexts = true  # テストコンテキストを表示

[tool.coverage.xml]
output = "coverage.xml"  # CI/CD連携用

[tool.coverage.json]
output = "coverage.json"  # 詳細分析用
pretty_print = true  # 読みやすい形式で出力